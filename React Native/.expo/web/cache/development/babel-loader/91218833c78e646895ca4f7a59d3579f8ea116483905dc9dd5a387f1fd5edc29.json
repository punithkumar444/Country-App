{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeCountry = function HomeCountry(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    countryDetails = _useState2[0],\n    setCountryDetails = _useState2[1];\n  useEffect(function () {\n    var handleIntialRequest = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch(\"https://restcountries.com/v3.1/all\");\n          var data = yield response.json();\n          setCountryDetails(data);\n        } catch (err) {\n          console.log(`ohh shit we got an error ${err}`);\n          return;\n        }\n      });\n      return function handleIntialRequest() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    handleIntialRequest();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.countryContainer,\n      children: _jsx(ScrollView, {\n        children: countryDetails.map(function (data) {\n          return _jsxs(View, {\n            style: styles.miniContainer,\n            children: [_jsx(Image, {\n              source: {\n                uri: data.flags.png\n              },\n              style: styles.contryImage\n            }), _jsxs(View, {\n              children: [_jsx(Text, {\n                style: styles.countryName,\n                children: data.name.common\n              }), _jsx(Text, {\n                children: `Population: ${data.population}`\n              }), _jsx(Text, {\n                children: `Region: ${data.continents[0]}`\n              }), _jsx(Text, {\n                children: `Capital: ${data.capital}`\n              })]\n            })]\n          }, data.cca3);\n        })\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FAFAFA\"\n  },\n  contryImage: {\n    height: 180,\n    width: 280\n  },\n  countryContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  miniContainer: {\n    backgroundColor: \"#ffffff\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 280,\n    marginVertical: 14\n  },\n  countryName: {\n    fontSize: 24,\n    fontWeight: \"500\"\n  }\n});\nexport default HomeCountry;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","HomeCountry","_ref","navigation","_useState","_useState2","_slicedToArray","countryDetails","setCountryDetails","handleIntialRequest","_ref2","_asyncToGenerator","response","fetch","data","json","err","console","log","apply","arguments","View","style","styles","container","children","countryContainer","ScrollView","map","miniContainer","Image","source","uri","flags","png","contryImage","Text","countryName","name","common","population","continents","capital","cca3","StyleSheet","create","flex","backgroundColor","height","width","justifyContent","alignItems","marginVertical","fontSize","fontWeight"],"sources":["C:/Users/91944/OneDrive/Desktop/React-Native-CountryApp/src/screens/HomeCountry.js"],"sourcesContent":["import { ScrollView, StyleSheet, Text, View ,Image} from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst HomeCountry = ({ navigation }) => {\r\n  const [countryDetails, setCountryDetails] = useState([]);\r\n  useEffect(() => {\r\n    const handleIntialRequest = async () => {\r\n      try {\r\n        const response = await fetch(\"https://restcountries.com/v3.1/all\");\r\n        const data = await response.json();\r\n        setCountryDetails(data);\r\n      } catch (err) {\r\n        console.log(`ohh shit we got an error ${err}`);\r\n        return;\r\n      }\r\n    };\r\n    handleIntialRequest();\r\n  }, []);\r\n  return (\r\n    <View style={styles.container}>\r\n        <View style={styles.countryContainer}>\r\n\r\n      <ScrollView>\r\n        {countryDetails.map((data) => (\r\n          <View key={data.cca3} style={styles.miniContainer}>\r\n            <Image \r\n            source={{uri:data.flags.png}}\r\n            style={styles.contryImage}\r\n\r\n            />\r\n            <View >\r\n            <Text style={styles.countryName}>{data.name.common}</Text>\r\n            <Text>{`Population: ${data.population}`}</Text>\r\n            <Text>{`Region: ${data.continents[0]}`}</Text>\r\n            <Text>{`Capital: ${data.capital}`}</Text>\r\n            </View>\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n                  \r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#FAFAFA\",\r\n  },\r\n  contryImage:{\r\nheight:180,\r\nwidth:280,\r\n  },countryContainer:{\r\n    flex:1,\r\n    justifyContent:\"center\",\r\n    alignItems:\"center\"\r\n  },\r\n  miniContainer:{\r\n    backgroundColor:\"#ffffff\",\r\n    flex:1,\r\n    justifyContent:\"center\",\r\n    alignItems:\"center\",\r\n    width:280,\r\n    marginVertical:14,\r\n  },countryName:{\r\n    fontSize:24,\r\n    // fontStyle:\"italic\",\r\n    fontWeight:\"500\"\r\n  }\r\n});\r\n\r\nexport default HomeCountry;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}